import os
import logging


from {{ config_file }} import {{ config_class }}
from marcottimls import Marcotti
from marcottimls.tools.logsetup import setup_logging
from marcottimls.etl import get_local_handles, ingest_feeds, CSV_ETL_CLASSES


setup_logging()
logger = logging.getLogger(__name__)


def main():
    settings = {{ config_class }}()
    marcotti = Marcotti(settings)
    marcotti.create_db()
    logger.info("Data ingestion start")
    with marcotti.create_session() as sess:
        for entity, etl_class in CSV_ETL_CLASSES:
            data_file = settings.CSV_DATA[entity]
            if data_file is None:
                logger.info("Skipping ingestion into %s data model", entity)
            else:
                if type(data_file) is list:
                    data_file = os.path.join(*data_file)
                logger.info("** Ingesting into %s data model **", entity)
                ingest_feeds(get_local_handles, settings.CSV_DATA_DIR, data_file, etl_class(sess))
    logger.info("Data ingestion complete")


if __name__ == "__main__":
    main()
